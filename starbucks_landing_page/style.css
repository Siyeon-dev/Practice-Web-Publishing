@import url("https://fonts.googleapis.com/css?family=Poppins:200, 300, 400, 500, 600 ,700, 800, 900&display=sawp");
/* セレクタ名 { プロパティ名:プロパティ値 ; プロパティ名:プロパティ値 ; … } */
* {
	margin: 0;
	padding: 0;
	/* 
        box-sizing値をborder-boxプロパティに指定すれば
        枠を含めた大きさを設定することができるので
        elementの大きさを見計いやすい。
    */
	box-sizing: border-box;
	font-family: "Poppins", sans-serif;
}

section {
	/* 
        positionプロパティはElementの配置する方法を指定する。
        relative値はElementを一般的な文書の無狩りによって配置する。
        そして、自分自身を基準として、top, right, bottom, leftの値によって
        オーフセットを適用する。
    */
	position: relative;
	width: 100%;
	min-height: 100vh;
	padding: 100px;
	display: flex;
	justify-content: space-between;
	align-items: center;
	background: #fff;
}

header {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	padding: 20px 100px;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

header .logo {
	position: relative;
	max-width: 80px;
}

header ul {
	position: relative;
	display: flex;
}

header ul li {
	list-style: none;
}

header ul li a {
	/* 
        displayプロパティは、要素の状態を指定することができる
        inline-blockにすれば、横幅と高さの指定ができるようになる。
        しかし、blockとの違いは勝手に改行されないという特徴がある。
    */
	display: inline-block;
	color: #333;
	font-weight: 400;
	margin-left: 40px;
	text-decoration: none;
}

.content {
	position: relative;
	width: 100%;
	display: flex;
	justify-content: space-around;
	align-items: center;
}

.content .textBox {
	position: relative;
	max-width: 600px;
}

.content .textBox h2 {
	/* 真っ黒が気にかかるならちょうどこれくらいのグレーもいいね */
	color: #333;
	/* 
        emとは？ 
        文字の大きさが1emになる。
        例え）基本的な文字の大きさ16px、1em＝16px
    */
	font-size: 4em;
	line-height: 1.4em;
	/* 文字が太いとちょっとダサいイメージがあるよね */
	font-weight: 500;
}

.content .textBox h2 span {
	color: #017143;
	font: size 1.2em;
	font-weight: 900;
}

.content .textBox a {
	display: inline-block;
	margin-top: 20px;
	padding: 8px 20px;
	background: #017143;
	color: #fff;
	/* ボタンのボーダレディウスは40pxくらいが良いね */
	border-radius: 40px;
	font-weight: 500;
	/* ボタンはちょっと文字の間の間隔に余裕があった方良いかも */
	letter-spacing: 1px;
	text-decoration: none;
}

.content .imgBox {
	width: 600px;
	display: flex;
	justify-content: flex-end;
	padding-right: 50px;
	margin-top: 50px;
}

.content .imgBox img {
	max-width: 340px;
}

.thumb {
	position: absolute;
	/* この二つは一緒に使われるよね。なんだか理由は知ってる */
	left: 50%;
	transform: translateX(-50%);
	bottom: 20px;
	display: flex;
}

.thumb li {
	list-style-type: none;
	/* なんでliプロパティには display:inline-blockを使うのだろう。 */
	display: inline-block;
	margin: 0 20px;
	cursor: pointer;
	transition: 0.5s;
}

.thumb li:hover {
	transform: translateY(-15px);
}

.thumb li img {
	max-width: 60px;
}

.sci {
	position: absolute;
	top: 50%;
	right: 30px;
	transform: translateY(-50%);
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

.sci li {
	list-style: none;
}

.sci li a {
	display: inline-block;
	margin: 5px 0;
	/* scaleとは？　→　大きさの変更 */
	transform: scale(0.6);
	/* 基本的に与えられた色を反転する */
	filter: invert(1);
}

.circle {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: #017143;
	/* このプロパティはclipingの範囲を指定する */
	clip-path: circle(600px at right 800px);
}
